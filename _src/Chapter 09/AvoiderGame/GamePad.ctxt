#BlueJ class context
comment0.params=klassFile\ cl\ defineClass
comment0.target=void\ loadLib(java.io.File,\ java.lang.ClassLoader,\ java.lang.reflect.Method)
comment1.params=
comment1.target=GamePad\ getGamePad()
comment1.text=\r\n\ <p>This\ returns\ the\ first\ GamePad\ that\ this\ library\ finds\ connected\ to\ your\ PC.\r\n\ If\ there\ is\ only\ one\ GamePad\ connected,\ then\ that\ is\ the\ one\ that\ is\ returned.</p>\r\n\ \r\n\ <p>If\ no\ game\ pad\ is\ plugged\ in\ then\ this\ will\ throw\ an\ exception.\r\n\ This\ will\ always\ return\ the\ same\ first\ GamePad\ it\ has\ found.</p>\r\n\ \r\n\ @return\ The\ first\ GamePad\ found.\r\n\ @throws\ IllegalStateException\ if\ there\ is\ no\ real\ game\ pad\ found.\r\n
comment10.params=
comment10.target=GamePad.GamePadMappings\ getGamePadMappings()
comment11.params=mappings
comment11.target=void\ setMapping(GamePad.GamePadMappings)
comment12.params=button
comment12.target=boolean\ isButtonSupported(GamePad.Button)
comment12.text=\r\n\ <p>Checks\ if\ the\ given\ button\ is\ supported\ on\ your\ gamepad,\r\n\ and\ so\ will\ work\ when\ pressed,\ or\ not.</p>\r\n\ \r\n\ @return\ True\ if\ the\ given\ button\ enum\ is\ supported\ by\ this\ controller.\r\n
comment13.params=button
comment13.target=boolean\ isDown(GamePad.Button)
comment13.text=\r\n\ <p>Checks\ if\ the\ button\ given\ is\ pressed\ down\ or\ not.\r\n\ If\ the\ button\ is\ not\ supported\ then\ this\ will\ always\r\n\ fail\ silently\ and\ return\ false.</p>\r\n\ \r\n\ @param\ button\ The\ button\ to\ check.\r\n\ @return\ True\ if\ the\ button\ with\ the\ given\ index\ is\ pressed,\ otherwise\ false.\r\n
comment14.params=axis
comment14.target=boolean\ isAxisSupported(GamePad.Axis)
comment14.text=\r\n\ <p>Checks\ if\ the\ given\ axis\ is\ supported\ or\ not.</p>\r\n\ \r\n\ @param\ The\ Axis\ object\ to\ check.\r\n\ @return\ True\ if\ the\ given\ axis\ is\ available\ to\ be\ read\ on\ this\ GamePad.\r\n
comment15.params=axis
comment15.target=Direction\ getAxis(GamePad.Axis)
comment15.text=\r\n\ <p>This\ returns\ a\ Direction\ describing\ the\ current\ angle\ and\ strength\r\n\ of\ the\ Axis\ polled.\ This\ will\ return\ a\ Direction\ regardless\ of\ if\r\n\ the\ Axis\ is\ in\ use\ or\ not.</p>\r\n\ \r\n\ <p>Axis\ which\ are\ not\ supported\ still\ return\ a\ Direction.\ But\ it\ will\r\n\ just\ never\ show\ any\ movement.</p>\r\n\ \r\n\ <p>To\ tell\ if\ the\ Direction\ is\ or\ is\ not\ in\ use\ then\ you\ should\ check\r\n\ the\ strength\ of\ the\ Direction.</p>\r\n\ \r\n\ @param\ axis\ The\ Axis\ to\ poll.\r\n\ @return\ The\ current\ Direction\ of\ the\ Axis\ polled.\r\n
comment16.params=h\ v
comment16.target=Direction\ getAxisDirection(int,\ int)
comment17.params=axis\ dir
comment17.target=Direction\ checkDirection(GamePad.Axis,\ Direction)
comment18.params=
comment18.target=Direction\ getPOVDirection()
comment19.params=
comment19.target=void\ runConfigurePad()
comment19.text=\r\n\ <p>Runs\ and\ shows\ a\ GamePad\ configuration\ GUI\ for\ setting\ gamepad\ mappings.</p>\r\n\ \r\n\ <p>This\ is\ what\ you\ can\ use\ for\ allowing\ users\ to\ reconfigure\ their\r\n\ gamepad\ within\ your\ scenario.</p>\r\n
comment2.params=index
comment2.target=GamePad\ getGamePad(int)
comment2.text=\r\n\ <p>For\ grabbing\ a\ specific\ gamepad\ that\ is\ connected\ to\ your\ PC.</p>\r\n\ \r\n\ <p>The\ index\ given\ should\ be\ from\ 0\ to\ the\ number\ of\ game\ pads\ on\ this\r\n\ machine,\ exclusive.</p>\r\n\ \r\n\ @param\ index\ The\ index\ of\ the\ GamePad\ to\ find.\r\n\ @return\ The\ GamePad\ stored\ against\ the\ given\ index.\r\n
comment3.params=
comment3.target=int\ getNumGamePads()
comment3.text=\r\n\ @return\ The\ number\ of\ game\ pads\ available\ on\ this\ PC,\ 0\ for\ no\ pads.\r\n
comment4.params=
comment4.target=GamePad[]\ getGamePads()
comment4.text=\r\n\ <p>Returns\ all\ of\ the\ GamePads\ that\ this\ library\ can\ find\ connected\ to\ your\ PC.</p>\r\n\ \r\n\ <p>If\ no\ pads\ are\ found\ then\ an\ empty\ array\ is\ returned.</p>\r\n\ \r\n\ @return\ An\ array\ containing\ all\ of\ the\ GamePads\ found\ connected\ to\ this\ machine.\r\n
comment5.params=pad
comment5.target=void\ setMapping(GamePad)
comment6.params=
comment6.target=void\ refreshGamePads()
comment6.text=\r\n\ <p>Rescans\ the\ PC\ for\ all\ GamePads\ connected.\ Calling\ getGamePads()\r\n\ after\ this\ will\ return\ the\ latest\ number\ of\ pads\ connected\ to\ the\r\n\ machine.</p>\r\n
comment7.params=
comment7.target=void\ save()
comment8.params=inner
comment8.target=GamePad(gamepadlib.GamePadLoader)
comment8.text=\r\n\ <p>Creates\ a\ new\ GamePad\ listening\ to\ the\ first\ real\ game\ pad\ it\ can\ find.</p>\r\n\ \r\n\ @throws\ IllegalStateException\ if\ there\ is\ no\ real\ game\ pad\ found.\r\n
comment9.params=
comment9.target=java.lang.String\ getName()
numComments=20
